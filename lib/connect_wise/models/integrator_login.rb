# #Connectwise Manage All Endpoints
#
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
#
# The version of the OpenAPI document: 2022.1
#
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 6.2.1
#

require 'date'
require 'time'

module ConnectWise
  class IntegratorLogin
    #  Max length: 50;
    attr_accessor :username

    attr_accessor :id, :inactive_flag, :date_inactivated, :inactivated_by, :service_ticket_api_flag, :board, :service_board_legacy_callback_flag, :time_entry_api_flag, :member, :time_entry_legacy_callback_flag, :managed_services_api_flag, :managed_services_auto_child_flag, :contact_api_flag, :contact_legacy_callback_flag, :company_api_flag, :company_legacy_callback_flag, :activity_api_flag, :activity_legacy_callback_flag, :invoice_api_flag, :product_api_flag, :product_legacy_callback_flag, :opportunity_api_flag, :opportunity_legacy_callback_flag, :member_api_flag, :marketing_api_flag, :purchasing_api_flag, :purchasing_legacy_callback_flag, :reporting_api_flag, :system_api_flag, :project_api_flag, :project_legacy_callback_flag, :configuration_api_flag, :configuration_auto_child_flag, :configuration_legacy_callback_flag, :schedule_api_flag, :schedule_legacy_callback_flag, :agreement_api_flag, :agreement_callback_legacy_flag, :document_api_flag, :_info

    # The password will never be returned in response Max length: 50;
    attr_accessor :password

    # This flag controls whether the integrator can access only the db records it created, or all system records
    attr_accessor :can_access_all_records_flag

    # Setting this flag to true will create an integrator that can access all of the available apis in the system.             If this field is set to true, both the member and board fields are required.
    attr_accessor :can_access_all_apis_flag

    #  Max length: 1000;
    attr_accessor :service_board_callback_url

    #  Max length: 1000;
    attr_accessor :time_entry_callback_url

    # True if integrator is allowed to child configurations
    attr_accessor :managed_services_childing_flag

    #  Max length: 1000;
    attr_accessor :contact_callback_url

    #  Max length: 1000;
    attr_accessor :company_callback_url

    #  Max length: 1000;
    attr_accessor :activity_callback_url

    #  Max length: 1000;
    attr_accessor :product_callback_url

    #  Max length: 1000;
    attr_accessor :opportunity_callback_url

    # True if the member has access to the Opportunity Conversion Api
    attr_accessor :opportunity_conversion_api_flag

    #  Max length: 1000;
    attr_accessor :purchasing_callback_url

    #  Max length: 1000;
    attr_accessor :project_callback_url

    # True if integrator is allowed to child configurations
    attr_accessor :configuration_childling_flag

    #  Max length: 1000;
    attr_accessor :configuration_callback_url

    #  Max length: 1000;
    attr_accessor :schedule_callback_url

    #  Max length: 1000;
    attr_accessor :agreement_callback_url

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        username: :username,
        id: :id,
        password: :password,
        can_access_all_records_flag: :canAccessAllRecordsFlag,
        can_access_all_apis_flag: :canAccessAllApisFlag,
        inactive_flag: :inactiveFlag,
        date_inactivated: :dateInactivated,
        inactivated_by: :inactivatedBy,
        service_ticket_api_flag: :serviceTicketApiFlag,
        board: :board,
        service_board_callback_url: :serviceBoardCallbackUrl,
        service_board_legacy_callback_flag: :serviceBoardLegacyCallbackFlag,
        time_entry_api_flag: :timeEntryApiFlag,
        member: :member,
        time_entry_callback_url: :timeEntryCallbackUrl,
        time_entry_legacy_callback_flag: :timeEntryLegacyCallbackFlag,
        managed_services_api_flag: :managedServicesApiFlag,
        managed_services_auto_child_flag: :managedServicesAutoChildFlag,
        managed_services_childing_flag: :managedServicesChildingFlag,
        contact_api_flag: :contactApiFlag,
        contact_callback_url: :contactCallbackUrl,
        contact_legacy_callback_flag: :contactLegacyCallbackFlag,
        company_api_flag: :companyApiFlag,
        company_callback_url: :companyCallbackUrl,
        company_legacy_callback_flag: :companyLegacyCallbackFlag,
        activity_api_flag: :activityApiFlag,
        activity_callback_url: :activityCallbackUrl,
        activity_legacy_callback_flag: :activityLegacyCallbackFlag,
        invoice_api_flag: :invoiceApiFlag,
        product_api_flag: :productApiFlag,
        product_callback_url: :productCallbackUrl,
        product_legacy_callback_flag: :productLegacyCallbackFlag,
        opportunity_api_flag: :opportunityApiFlag,
        opportunity_callback_url: :opportunityCallbackUrl,
        opportunity_legacy_callback_flag: :opportunityLegacyCallbackFlag,
        opportunity_conversion_api_flag: :opportunityConversionApiFlag,
        member_api_flag: :memberApiFlag,
        marketing_api_flag: :marketingApiFlag,
        purchasing_api_flag: :purchasingApiFlag,
        purchasing_callback_url: :purchasingCallbackUrl,
        purchasing_legacy_callback_flag: :purchasingLegacyCallbackFlag,
        reporting_api_flag: :reportingApiFlag,
        system_api_flag: :systemApiFlag,
        project_api_flag: :projectApiFlag,
        project_callback_url: :projectCallbackUrl,
        project_legacy_callback_flag: :projectLegacyCallbackFlag,
        configuration_api_flag: :configurationApiFlag,
        configuration_auto_child_flag: :configurationAutoChildFlag,
        configuration_childling_flag: :configurationChildlingFlag,
        configuration_callback_url: :configurationCallbackUrl,
        configuration_legacy_callback_flag: :configurationLegacyCallbackFlag,
        schedule_api_flag: :scheduleApiFlag,
        schedule_callback_url: :scheduleCallbackUrl,
        schedule_legacy_callback_flag: :scheduleLegacyCallbackFlag,
        agreement_api_flag: :agreementApiFlag,
        agreement_callback_url: :agreementCallbackUrl,
        agreement_callback_legacy_flag: :agreementCallbackLegacyFlag,
        document_api_flag: :documentApiFlag,
        _info: :_info
      }
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        username: :String,
        id: :Integer,
        password: :String,
        can_access_all_records_flag: :Boolean,
        can_access_all_apis_flag: :Boolean,
        inactive_flag: :Boolean,
        date_inactivated: :Time,
        inactivated_by: :MemberReference,
        service_ticket_api_flag: :Boolean,
        board: :BoardReference,
        service_board_callback_url: :String,
        service_board_legacy_callback_flag: :Boolean,
        time_entry_api_flag: :Boolean,
        member: :MemberReference,
        time_entry_callback_url: :String,
        time_entry_legacy_callback_flag: :Boolean,
        managed_services_api_flag: :Boolean,
        managed_services_auto_child_flag: :Boolean,
        managed_services_childing_flag: :Boolean,
        contact_api_flag: :Boolean,
        contact_callback_url: :String,
        contact_legacy_callback_flag: :Boolean,
        company_api_flag: :Boolean,
        company_callback_url: :String,
        company_legacy_callback_flag: :Boolean,
        activity_api_flag: :Boolean,
        activity_callback_url: :String,
        activity_legacy_callback_flag: :Boolean,
        invoice_api_flag: :Boolean,
        product_api_flag: :Boolean,
        product_callback_url: :String,
        product_legacy_callback_flag: :Boolean,
        opportunity_api_flag: :Boolean,
        opportunity_callback_url: :String,
        opportunity_legacy_callback_flag: :Boolean,
        opportunity_conversion_api_flag: :Boolean,
        member_api_flag: :Boolean,
        marketing_api_flag: :Boolean,
        purchasing_api_flag: :Boolean,
        purchasing_callback_url: :String,
        purchasing_legacy_callback_flag: :Boolean,
        reporting_api_flag: :Boolean,
        system_api_flag: :Boolean,
        project_api_flag: :Boolean,
        project_callback_url: :String,
        project_legacy_callback_flag: :Boolean,
        configuration_api_flag: :Boolean,
        configuration_auto_child_flag: :Boolean,
        configuration_childling_flag: :Boolean,
        configuration_callback_url: :String,
        configuration_legacy_callback_flag: :Boolean,
        schedule_api_flag: :Boolean,
        schedule_callback_url: :String,
        schedule_legacy_callback_flag: :Boolean,
        agreement_api_flag: :Boolean,
        agreement_callback_url: :String,
        agreement_callback_legacy_flag: :Boolean,
        document_api_flag: :Boolean,
        _info: :'Hash<String, String>'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new(%i[
                can_access_all_records_flag
                can_access_all_apis_flag
                inactive_flag
                service_ticket_api_flag
                service_board_legacy_callback_flag
                time_entry_api_flag
                time_entry_legacy_callback_flag
                managed_services_api_flag
                managed_services_auto_child_flag
                managed_services_childing_flag
                contact_api_flag
                contact_legacy_callback_flag
                company_api_flag
                company_legacy_callback_flag
                activity_api_flag
                activity_legacy_callback_flag
                invoice_api_flag
                product_api_flag
                product_legacy_callback_flag
                opportunity_api_flag
                opportunity_legacy_callback_flag
                opportunity_conversion_api_flag
                member_api_flag
                marketing_api_flag
                purchasing_api_flag
                purchasing_legacy_callback_flag
                reporting_api_flag
                system_api_flag
                project_api_flag
                project_legacy_callback_flag
                configuration_api_flag
                configuration_auto_child_flag
                configuration_childling_flag
                configuration_legacy_callback_flag
                schedule_api_flag
                schedule_legacy_callback_flag
                agreement_api_flag
                agreement_callback_legacy_flag
                document_api_flag
              ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      raise ArgumentError, 'The input argument (attributes) must be a hash in `ConnectWise::IntegratorLogin` initialize method' unless attributes.is_a?(Hash)

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) do |(k, v), h|
        raise ArgumentError, "`#{k}` is not a valid attribute in `ConnectWise::IntegratorLogin`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect unless self.class.attribute_map.key?(k.to_sym)

        h[k.to_sym] = v
      end

      self.username = attributes[:username] if attributes.key?(:username)

      self.id = attributes[:id] if attributes.key?(:id)

      self.password = attributes[:password] if attributes.key?(:password)

      self.can_access_all_records_flag = attributes[:can_access_all_records_flag] if attributes.key?(:can_access_all_records_flag)

      self.can_access_all_apis_flag = attributes[:can_access_all_apis_flag] if attributes.key?(:can_access_all_apis_flag)

      self.inactive_flag = attributes[:inactive_flag] if attributes.key?(:inactive_flag)

      self.date_inactivated = attributes[:date_inactivated] if attributes.key?(:date_inactivated)

      self.inactivated_by = attributes[:inactivated_by] if attributes.key?(:inactivated_by)

      self.service_ticket_api_flag = attributes[:service_ticket_api_flag] if attributes.key?(:service_ticket_api_flag)

      self.board = attributes[:board] if attributes.key?(:board)

      self.service_board_callback_url = attributes[:service_board_callback_url] if attributes.key?(:service_board_callback_url)

      self.service_board_legacy_callback_flag = attributes[:service_board_legacy_callback_flag] if attributes.key?(:service_board_legacy_callback_flag)

      self.time_entry_api_flag = attributes[:time_entry_api_flag] if attributes.key?(:time_entry_api_flag)

      self.member = attributes[:member] if attributes.key?(:member)

      self.time_entry_callback_url = attributes[:time_entry_callback_url] if attributes.key?(:time_entry_callback_url)

      self.time_entry_legacy_callback_flag = attributes[:time_entry_legacy_callback_flag] if attributes.key?(:time_entry_legacy_callback_flag)

      self.managed_services_api_flag = attributes[:managed_services_api_flag] if attributes.key?(:managed_services_api_flag)

      self.managed_services_auto_child_flag = attributes[:managed_services_auto_child_flag] if attributes.key?(:managed_services_auto_child_flag)

      self.managed_services_childing_flag = attributes[:managed_services_childing_flag] if attributes.key?(:managed_services_childing_flag)

      self.contact_api_flag = attributes[:contact_api_flag] if attributes.key?(:contact_api_flag)

      self.contact_callback_url = attributes[:contact_callback_url] if attributes.key?(:contact_callback_url)

      self.contact_legacy_callback_flag = attributes[:contact_legacy_callback_flag] if attributes.key?(:contact_legacy_callback_flag)

      self.company_api_flag = attributes[:company_api_flag] if attributes.key?(:company_api_flag)

      self.company_callback_url = attributes[:company_callback_url] if attributes.key?(:company_callback_url)

      self.company_legacy_callback_flag = attributes[:company_legacy_callback_flag] if attributes.key?(:company_legacy_callback_flag)

      self.activity_api_flag = attributes[:activity_api_flag] if attributes.key?(:activity_api_flag)

      self.activity_callback_url = attributes[:activity_callback_url] if attributes.key?(:activity_callback_url)

      self.activity_legacy_callback_flag = attributes[:activity_legacy_callback_flag] if attributes.key?(:activity_legacy_callback_flag)

      self.invoice_api_flag = attributes[:invoice_api_flag] if attributes.key?(:invoice_api_flag)

      self.product_api_flag = attributes[:product_api_flag] if attributes.key?(:product_api_flag)

      self.product_callback_url = attributes[:product_callback_url] if attributes.key?(:product_callback_url)

      self.product_legacy_callback_flag = attributes[:product_legacy_callback_flag] if attributes.key?(:product_legacy_callback_flag)

      self.opportunity_api_flag = attributes[:opportunity_api_flag] if attributes.key?(:opportunity_api_flag)

      self.opportunity_callback_url = attributes[:opportunity_callback_url] if attributes.key?(:opportunity_callback_url)

      self.opportunity_legacy_callback_flag = attributes[:opportunity_legacy_callback_flag] if attributes.key?(:opportunity_legacy_callback_flag)

      self.opportunity_conversion_api_flag = attributes[:opportunity_conversion_api_flag] if attributes.key?(:opportunity_conversion_api_flag)

      self.member_api_flag = attributes[:member_api_flag] if attributes.key?(:member_api_flag)

      self.marketing_api_flag = attributes[:marketing_api_flag] if attributes.key?(:marketing_api_flag)

      self.purchasing_api_flag = attributes[:purchasing_api_flag] if attributes.key?(:purchasing_api_flag)

      self.purchasing_callback_url = attributes[:purchasing_callback_url] if attributes.key?(:purchasing_callback_url)

      self.purchasing_legacy_callback_flag = attributes[:purchasing_legacy_callback_flag] if attributes.key?(:purchasing_legacy_callback_flag)

      self.reporting_api_flag = attributes[:reporting_api_flag] if attributes.key?(:reporting_api_flag)

      self.system_api_flag = attributes[:system_api_flag] if attributes.key?(:system_api_flag)

      self.project_api_flag = attributes[:project_api_flag] if attributes.key?(:project_api_flag)

      self.project_callback_url = attributes[:project_callback_url] if attributes.key?(:project_callback_url)

      self.project_legacy_callback_flag = attributes[:project_legacy_callback_flag] if attributes.key?(:project_legacy_callback_flag)

      self.configuration_api_flag = attributes[:configuration_api_flag] if attributes.key?(:configuration_api_flag)

      self.configuration_auto_child_flag = attributes[:configuration_auto_child_flag] if attributes.key?(:configuration_auto_child_flag)

      self.configuration_childling_flag = attributes[:configuration_childling_flag] if attributes.key?(:configuration_childling_flag)

      self.configuration_callback_url = attributes[:configuration_callback_url] if attributes.key?(:configuration_callback_url)

      self.configuration_legacy_callback_flag = attributes[:configuration_legacy_callback_flag] if attributes.key?(:configuration_legacy_callback_flag)

      self.schedule_api_flag = attributes[:schedule_api_flag] if attributes.key?(:schedule_api_flag)

      self.schedule_callback_url = attributes[:schedule_callback_url] if attributes.key?(:schedule_callback_url)

      self.schedule_legacy_callback_flag = attributes[:schedule_legacy_callback_flag] if attributes.key?(:schedule_legacy_callback_flag)

      self.agreement_api_flag = attributes[:agreement_api_flag] if attributes.key?(:agreement_api_flag)

      self.agreement_callback_url = attributes[:agreement_callback_url] if attributes.key?(:agreement_callback_url)

      self.agreement_callback_legacy_flag = attributes[:agreement_callback_legacy_flag] if attributes.key?(:agreement_callback_legacy_flag)

      self.document_api_flag = attributes[:document_api_flag] if attributes.key?(:document_api_flag)

      return unless attributes.key?(:_info)
      return unless (value = attributes[:_info]).is_a?(Hash)

      self._info = value
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = []
      invalid_properties.push('invalid value for "username", username cannot be nil.') if @username.nil?

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false if @username.nil?

      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(other)
      return true if equal?(other)

      self.class == other.class &&
        username == other.username &&
        id == other.id &&
        password == other.password &&
        can_access_all_records_flag == other.can_access_all_records_flag &&
        can_access_all_apis_flag == other.can_access_all_apis_flag &&
        inactive_flag == other.inactive_flag &&
        date_inactivated == other.date_inactivated &&
        inactivated_by == other.inactivated_by &&
        service_ticket_api_flag == other.service_ticket_api_flag &&
        board == other.board &&
        service_board_callback_url == other.service_board_callback_url &&
        service_board_legacy_callback_flag == other.service_board_legacy_callback_flag &&
        time_entry_api_flag == other.time_entry_api_flag &&
        member == other.member &&
        time_entry_callback_url == other.time_entry_callback_url &&
        time_entry_legacy_callback_flag == other.time_entry_legacy_callback_flag &&
        managed_services_api_flag == other.managed_services_api_flag &&
        managed_services_auto_child_flag == other.managed_services_auto_child_flag &&
        managed_services_childing_flag == other.managed_services_childing_flag &&
        contact_api_flag == other.contact_api_flag &&
        contact_callback_url == other.contact_callback_url &&
        contact_legacy_callback_flag == other.contact_legacy_callback_flag &&
        company_api_flag == other.company_api_flag &&
        company_callback_url == other.company_callback_url &&
        company_legacy_callback_flag == other.company_legacy_callback_flag &&
        activity_api_flag == other.activity_api_flag &&
        activity_callback_url == other.activity_callback_url &&
        activity_legacy_callback_flag == other.activity_legacy_callback_flag &&
        invoice_api_flag == other.invoice_api_flag &&
        product_api_flag == other.product_api_flag &&
        product_callback_url == other.product_callback_url &&
        product_legacy_callback_flag == other.product_legacy_callback_flag &&
        opportunity_api_flag == other.opportunity_api_flag &&
        opportunity_callback_url == other.opportunity_callback_url &&
        opportunity_legacy_callback_flag == other.opportunity_legacy_callback_flag &&
        opportunity_conversion_api_flag == other.opportunity_conversion_api_flag &&
        member_api_flag == other.member_api_flag &&
        marketing_api_flag == other.marketing_api_flag &&
        purchasing_api_flag == other.purchasing_api_flag &&
        purchasing_callback_url == other.purchasing_callback_url &&
        purchasing_legacy_callback_flag == other.purchasing_legacy_callback_flag &&
        reporting_api_flag == other.reporting_api_flag &&
        system_api_flag == other.system_api_flag &&
        project_api_flag == other.project_api_flag &&
        project_callback_url == other.project_callback_url &&
        project_legacy_callback_flag == other.project_legacy_callback_flag &&
        configuration_api_flag == other.configuration_api_flag &&
        configuration_auto_child_flag == other.configuration_auto_child_flag &&
        configuration_childling_flag == other.configuration_childling_flag &&
        configuration_callback_url == other.configuration_callback_url &&
        configuration_legacy_callback_flag == other.configuration_legacy_callback_flag &&
        schedule_api_flag == other.schedule_api_flag &&
        schedule_callback_url == other.schedule_callback_url &&
        schedule_legacy_callback_flag == other.schedule_legacy_callback_flag &&
        agreement_api_flag == other.agreement_api_flag &&
        agreement_callback_url == other.agreement_callback_url &&
        agreement_callback_legacy_flag == other.agreement_callback_legacy_flag &&
        document_api_flag == other.document_api_flag &&
        _info == other._info
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(other)
      self == other
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [username, id, password, can_access_all_records_flag, can_access_all_apis_flag, inactive_flag, date_inactivated, inactivated_by, service_ticket_api_flag, board, service_board_callback_url, service_board_legacy_callback_flag, time_entry_api_flag, member, time_entry_callback_url, time_entry_legacy_callback_flag, managed_services_api_flag, managed_services_auto_child_flag, managed_services_childing_flag, contact_api_flag, contact_callback_url, contact_legacy_callback_flag, company_api_flag, company_callback_url, company_legacy_callback_flag, activity_api_flag, activity_callback_url, activity_legacy_callback_flag, invoice_api_flag, product_api_flag, product_callback_url, product_legacy_callback_flag, opportunity_api_flag, opportunity_callback_url, opportunity_legacy_callback_flag, opportunity_conversion_api_flag, member_api_flag, marketing_api_flag, purchasing_api_flag, purchasing_callback_url, purchasing_legacy_callback_flag, reporting_api_flag, system_api_flag, project_api_flag, project_callback_url, project_legacy_callback_flag, configuration_api_flag, configuration_auto_child_flag, configuration_childling_flag, configuration_callback_url, configuration_legacy_callback_flag, schedule_api_flag, schedule_callback_url, schedule_legacy_callback_flag, agreement_api_flag, agreement_callback_url, agreement_callback_legacy_flag, document_api_flag, _info].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      new.build_from_hash(attributes)
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)

      attributes = attributes.transform_keys(&:to_sym)
      self.class.openapi_types.each_pair do |key, type|
        if attributes[self.class.attribute_map[key]].nil? && self.class.openapi_nullable.include?(key)
          send("#{key}=", nil)
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize(::Regexp.last_match(1), v) }) if attributes[self.class.attribute_map[key]].is_a?(Array)
        elsif !attributes[self.class.attribute_map[key]].nil?
          send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = ConnectWise.const_get(type)
        klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
