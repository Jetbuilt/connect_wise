# #Connectwise Manage All Endpoints
#
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
#
# The version of the OpenAPI document: 2022.1
#
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 6.2.1
#

require 'cgi'

module ConnectWise
  class BundlesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Post BundleResultsCollection
    # @param client_id [String]
    # @param bundle_requests_collection [BundleRequestsCollection] requests
    # @param [Hash] opts the optional parameters
    # @return [BundleResultsCollection]
    def post_system_bundles(client_id, bundle_requests_collection, opts = {})
      data, _status_code, _headers = post_system_bundles_with_http_info(client_id, bundle_requests_collection, opts)
      data
    end

    # Post BundleResultsCollection
    # @param client_id [String]
    # @param bundle_requests_collection [BundleRequestsCollection] requests
    # @param [Hash] opts the optional parameters
    # @return [Array<(BundleResultsCollection, Integer, Hash)>] BundleResultsCollection data, response status code and response headers
    def post_system_bundles_with_http_info(client_id, bundle_requests_collection, opts = {})
      @api_client.config.logger.debug 'Calling API: BundlesApi.post_system_bundles ...' if @api_client.config.debugging
      # verify the required parameter 'client_id' is set
      raise ArgumentError, "Missing the required parameter 'client_id' when calling BundlesApi.post_system_bundles" if @api_client.config.client_side_validation && client_id.nil?
      # verify the required parameter 'bundle_requests_collection' is set
      raise ArgumentError, "Missing the required parameter 'bundle_requests_collection' when calling BundlesApi.post_system_bundles" if @api_client.config.client_side_validation && bundle_requests_collection.nil?

      # resource path
      local_var_path = '/system/bundles'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.connectwise.com+json; version=2022.1'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      header_params['Content-Type'] = content_type unless content_type.nil?
      header_params[:clientId] = client_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(bundle_requests_collection)

      # return_type
      return_type = opts[:debug_return_type] || 'BundleResultsCollection'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        operation: :'BundlesApi.post_system_bundles',
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      @api_client.config.logger.debug "API called: BundlesApi#post_system_bundles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" if @api_client.config.debugging
      [data, status_code, headers]
    end

    # Post BundleResultsCollection
    # @param client_id [String]
    # @param bundle_requests_collection [BundleRequestsCollection] requests
    # @param [Hash] opts the optional parameters
    # @return [BundleResultsCollection]
    def post_system_bundles_count(client_id, bundle_requests_collection, opts = {})
      data, _status_code, _headers = post_system_bundles_count_with_http_info(client_id, bundle_requests_collection, opts)
      data
    end

    # Post BundleResultsCollection
    # @param client_id [String]
    # @param bundle_requests_collection [BundleRequestsCollection] requests
    # @param [Hash] opts the optional parameters
    # @return [Array<(BundleResultsCollection, Integer, Hash)>] BundleResultsCollection data, response status code and response headers
    def post_system_bundles_count_with_http_info(client_id, bundle_requests_collection, opts = {})
      @api_client.config.logger.debug 'Calling API: BundlesApi.post_system_bundles_count ...' if @api_client.config.debugging
      # verify the required parameter 'client_id' is set
      raise ArgumentError, "Missing the required parameter 'client_id' when calling BundlesApi.post_system_bundles_count" if @api_client.config.client_side_validation && client_id.nil?
      # verify the required parameter 'bundle_requests_collection' is set
      raise ArgumentError, "Missing the required parameter 'bundle_requests_collection' when calling BundlesApi.post_system_bundles_count" if @api_client.config.client_side_validation && bundle_requests_collection.nil?

      # resource path
      local_var_path = '/system/bundles/count'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.connectwise.com+json; version=2022.1'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      header_params['Content-Type'] = content_type unless content_type.nil?
      header_params[:clientId] = client_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(bundle_requests_collection)

      # return_type
      return_type = opts[:debug_return_type] || 'BundleResultsCollection'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        operation: :'BundlesApi.post_system_bundles_count',
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      @api_client.config.logger.debug "API called: BundlesApi#post_system_bundles_count\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" if @api_client.config.debugging
      [data, status_code, headers]
    end
  end
end
