# #Connectwise Manage Public Endpoints
#
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
#
# The version of the OpenAPI document: 2025.1
#
# Generated by: https://openapi-generator.tech
# Generator version: 7.12.0
#

require 'cgi'

module ConnectWise
  class AuditTrailApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get List of AuditTrailEntry
    # @param client_id [String]
    # @param [Hash] opts the optional parameters
    # @option opts [String] :type type
    # @option opts [Integer] :id id
    # @option opts [String] :device_identifier deviceIdentifier
    # @option opts [Integer] :xref_rec_id xrefRecId
    # @option opts [String] :conditions
    # @option opts [String] :child_conditions
    # @option opts [String] :custom_field_conditions
    # @option opts [String] :order_by
    # @option opts [String] :fields
    # @option opts [Integer] :page
    # @option opts [Integer] :page_size
    # @option opts [Integer] :page_id
    # @return [Array<AuditTrailEntry>]
    def get_system_audittrail(client_id, opts = {})
      data, _status_code, _headers = get_system_audittrail_with_http_info(client_id, opts)
      data
    end

    # Get List of AuditTrailEntry
    # @param client_id [String]
    # @param [Hash] opts the optional parameters
    # @option opts [String] :type type
    # @option opts [Integer] :id id
    # @option opts [String] :device_identifier deviceIdentifier
    # @option opts [Integer] :xref_rec_id xrefRecId
    # @option opts [String] :conditions
    # @option opts [String] :child_conditions
    # @option opts [String] :custom_field_conditions
    # @option opts [String] :order_by
    # @option opts [String] :fields
    # @option opts [Integer] :page
    # @option opts [Integer] :page_size
    # @option opts [Integer] :page_id
    # @return [Array<(Array<AuditTrailEntry>, Integer, Hash)>] Array<AuditTrailEntry> data, response status code and response headers
    def get_system_audittrail_with_http_info(client_id, opts = {})
      @api_client.config.logger.debug 'Calling API: AuditTrailApi.get_system_audittrail ...' if @api_client.config.debugging
      # verify the required parameter 'client_id' is set
      raise ArgumentError, "Missing the required parameter 'client_id' when calling AuditTrailApi.get_system_audittrail" if @api_client.config.client_side_validation && client_id.nil?

      allowable_values = %w[None Ticket Contact Company Opportunity Time Activity ProductCatalog ProjectTicket Purchasing Configuration Schedule Agreement AgreementAddition Project Invoice PurchaseOrder Expense ProductItem Survey Member PurchaseOrderLineItem]
      raise ArgumentError, "invalid value for \"type\", must be one of #{allowable_values}" if @api_client.config.client_side_validation && opts[:type] && !allowable_values.include?(opts[:type])

      # resource path
      local_var_path = '/system/audittrail'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:type] = opts[:type] unless opts[:type].nil?
      query_params[:id] = opts[:id] unless opts[:id].nil?
      query_params[:deviceIdentifier] = opts[:device_identifier] unless opts[:device_identifier].nil?
      query_params[:xrefRecId] = opts[:xref_rec_id] unless opts[:xref_rec_id].nil?
      query_params[:conditions] = opts[:conditions] unless opts[:conditions].nil?
      query_params[:childConditions] = opts[:child_conditions] unless opts[:child_conditions].nil?
      query_params[:customFieldConditions] = opts[:custom_field_conditions] unless opts[:custom_field_conditions].nil?
      query_params[:orderBy] = opts[:order_by] unless opts[:order_by].nil?
      query_params[:fields] = opts[:fields] unless opts[:fields].nil?
      query_params[:page] = opts[:page] unless opts[:page].nil?
      query_params[:pageSize] = opts[:page_size] unless opts[:page_size].nil?
      query_params[:pageId] = opts[:page_id] unless opts[:page_id].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.connectwise.com+json; version=2025.1']) unless header_params['Accept']
      header_params[:clientId] = client_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Array<AuditTrailEntry>'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        operation: :'AuditTrailApi.get_system_audittrail',
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      @api_client.config.logger.debug "API called: AuditTrailApi#get_system_audittrail\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" if @api_client.config.debugging
      [data, status_code, headers]
    end

    # Get Count of AuditTrailEntry
    # @param client_id [String]
    # @param [Hash] opts the optional parameters
    # @option opts [String] :type type
    # @option opts [Integer] :id id
    # @option opts [String] :device_identifier deviceIdentifier
    # @option opts [Integer] :xref_rec_id xrefRecId
    # @option opts [String] :conditions
    # @option opts [String] :child_conditions
    # @option opts [String] :custom_field_conditions
    # @option opts [String] :order_by
    # @option opts [String] :fields
    # @option opts [Integer] :page
    # @option opts [Integer] :page_size
    # @option opts [Integer] :page_id
    # @return [Count]
    def get_system_audittrail_count(client_id, opts = {})
      data, _status_code, _headers = get_system_audittrail_count_with_http_info(client_id, opts)
      data
    end

    # Get Count of AuditTrailEntry
    # @param client_id [String]
    # @param [Hash] opts the optional parameters
    # @option opts [String] :type type
    # @option opts [Integer] :id id
    # @option opts [String] :device_identifier deviceIdentifier
    # @option opts [Integer] :xref_rec_id xrefRecId
    # @option opts [String] :conditions
    # @option opts [String] :child_conditions
    # @option opts [String] :custom_field_conditions
    # @option opts [String] :order_by
    # @option opts [String] :fields
    # @option opts [Integer] :page
    # @option opts [Integer] :page_size
    # @option opts [Integer] :page_id
    # @return [Array<(Count, Integer, Hash)>] Count data, response status code and response headers
    def get_system_audittrail_count_with_http_info(client_id, opts = {})
      @api_client.config.logger.debug 'Calling API: AuditTrailApi.get_system_audittrail_count ...' if @api_client.config.debugging
      # verify the required parameter 'client_id' is set
      raise ArgumentError, "Missing the required parameter 'client_id' when calling AuditTrailApi.get_system_audittrail_count" if @api_client.config.client_side_validation && client_id.nil?

      allowable_values = %w[None Ticket Contact Company Opportunity Time Activity ProductCatalog ProjectTicket Purchasing Configuration Schedule Agreement AgreementAddition Project Invoice PurchaseOrder Expense ProductItem Survey Member PurchaseOrderLineItem]
      raise ArgumentError, "invalid value for \"type\", must be one of #{allowable_values}" if @api_client.config.client_side_validation && opts[:type] && !allowable_values.include?(opts[:type])

      # resource path
      local_var_path = '/system/audittrail/count'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:type] = opts[:type] unless opts[:type].nil?
      query_params[:id] = opts[:id] unless opts[:id].nil?
      query_params[:deviceIdentifier] = opts[:device_identifier] unless opts[:device_identifier].nil?
      query_params[:xrefRecId] = opts[:xref_rec_id] unless opts[:xref_rec_id].nil?
      query_params[:conditions] = opts[:conditions] unless opts[:conditions].nil?
      query_params[:childConditions] = opts[:child_conditions] unless opts[:child_conditions].nil?
      query_params[:customFieldConditions] = opts[:custom_field_conditions] unless opts[:custom_field_conditions].nil?
      query_params[:orderBy] = opts[:order_by] unless opts[:order_by].nil?
      query_params[:fields] = opts[:fields] unless opts[:fields].nil?
      query_params[:page] = opts[:page] unless opts[:page].nil?
      query_params[:pageSize] = opts[:page_size] unless opts[:page_size].nil?
      query_params[:pageId] = opts[:page_id] unless opts[:page_id].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.connectwise.com+json; version=2025.1']) unless header_params['Accept']
      header_params[:clientId] = client_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Count'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        operation: :'AuditTrailApi.get_system_audittrail_count',
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      @api_client.config.logger.debug "API called: AuditTrailApi#get_system_audittrail_count\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" if @api_client.config.debugging
      [data, status_code, headers]
    end
  end
end
